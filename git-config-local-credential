#!/bin/sh

me=`basename "$0"`

function show_usage() {
	echo "Git repository local credential configurator."
	echo ""
	echo "usage: $me <protocol> <domain> <username> [option]"
	echo ""
	echo "    protocol  http, https, ssh, git."
	echo "    domain    Your repository's domain."
	echo "    username  The username of your repository's domain."
	echo "    option    -r, --recursive     Sets the submodules at them same time."
}

if [ "$#" -eq 0 ]; then
	show_usage
	exit 1
fi

if [ "$#" -lt 3 ]; then
	echo "Invalid argument list: \"$@\"."
	show_usage
	exit 1
fi

_PROTOCOL=''
_DOMAIN=''
_USERNAME=''
_IS_RECURSIVE=1

# Get _PROTOCOL
if [ "$1" = "http" ]; then
	_PROTOCOL="http"
elif [ "$1" = "HTTP" ]; then
	_PROTOCOL="http"
elif [ "$1" = "https" ]; then
	_PROTOCOL="https"
elif [ "$1" = "HTTPS" ]; then
	_PROTOCOL="https"
elif [ "$1" = "ssh" ]; then
	_PROTOCOL="ssh"
elif [ "$1" = "SSH" ]; then
	_PROTOCOL="SSH"
elif [ "$1" = "git" ]; then
	_PROTOCOL="git"
elif [ "$1" = "GIT" ]; then
	_PROTOCOL="GIT"
else
	echo "Invalid protocol: \"$_PROTOCOL\"."
	show_usage
	exit 1
fi

# Get _DOMAIN
if [ -z "$2" ]; then
	echo "No domain specified."
	show_usage
	exit 1
else
	_DOMAIN="$2"
fi

# Get _USERNAME
if [ -z "$3" ]; then
	echo "No username specified."
	show_usage
	exit 1
else
	_USERNAME="$3"
fi

# Get _IS_RECURSIVE
if [ "$4" = "-r" ]; then
	_IS_RECURSIVE=0
elif [ "$4" = "--recursive" ]; then
	_IS_RECURSIVE=0
fi

git config --local credential.$_PROTOCOL://$_DOMAIN.username $_USERNAME
if [ $_IS_RECURSIVE -eq 0 ]; then
	git submodule foreach --recursive git config --local credential.$_PROTOCOL://$_DOMAIN.username $_USERNAME
fi
